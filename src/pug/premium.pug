extends templates/_catalogo
include helpers/_mixins

block content
  div
    include templates/_navbar.pug
  
  #scroll.premium
    section.first 
      .slides-home.slides-horizontal.container-fluid#first
        .abajo#abajo
          img(src="assets/images/catalogo/basico/Scroll_B.svg")
        .slide.row.align-items-center
            .image.col-md-6.animate__animated.animate__fadeIn.mb-3.mb-md-0
                include svg/catalogo/premium/medidas.pug
                img(src="assets/images/catalogo/Premium_72.png")
            .info.col-md-6.d-md-flex.flex-column.animate__animated.animate__fadeIn
              .titulo-1.primary-color.mt-auto PREMIUM
              .subtitulo-1.secondary-color La única capaz de congelar 
                  br
                  | tus sentidos.
              .content.mb-auto.pe-5
                p Su poderosa estructura y alta potencia la convierten en una extraordinaria opción para comedores industriales, hoteles, restaurantes grandes, expendios y bares.
                p Tiene la carga ideal para enfriar hieleras con cervezas y regalarle hielo a los clientes.
                p Disponible con una amplia gama de capacidades en producción.
                p Altamente eficiente, competitiva y ahorra energía.
    section.horizontal#horizontal
      #loader.vertical.no-animate
        li.uno
          include svg/servicios/sliderload.pug
        li.dos
          include svg/servicios/sliderload.pug
        li.tres
          include svg/servicios/sliderload.pug
      section.panel.horizontal-info.kg#detalles.first.active
        .content.container.slide-1
          .d-flex.w-md-100
            .icon.circle#circle
              include svg/catalogo/premium/circle.pug
              img(src="assets/images/catalogo/basico/Kilos_Hielo_B.svg")
              img(src="assets/images/catalogo/Kilos_Contorno_B.svg").contorno
            .text.subtitulo-3
              | Hasta 900 kilos 
              strong.secondary-color diarios.
      section.panel.horizontal-info.cubo#cubo
        .content.container.slide-1
          .d-flex.w-md-100
            .icon
              include svg/catalogo/diagrama.pug
            .text.subtitulo-3
              | Cubo tipo 
              strong.secondary-color media luna 
              | individual.    
  
      section.panel.horizontal-info.hasta#kilos
        .content.container.slide-1
          .d-flex.w-md-100
            .icon
              include svg/catalogo/premium/deposito.pug
            .text.subtitulo-3
              | Almacena 
              strong.secondary-color 410 Kilos 
              | en su depósito.

    #vertical-div-1
      section.vertical#vertical-1
        .detalles.container-fluid.active.intermedio
          .row.active
            section.panel.col-md-6.text.uno.vertical
              div#uno
                .subtitulo-2
                  span.white-color HIELO
                  br
                  span.white-color SANITIZADO
                  br
                  span.secondary-color CADA 40 MINUTOS
                .texto-2.white-color Con su eficaz sistema higiénico puedes contar, de manera frecuente, con hielo totalmente purificado y listo para servirse.              
              #dos
                .subtitulo-2
                  span.secondary-color EVAPORADOR 
                  br
                  span.white-color DE ACERO 
                    | INOXIDABLE
                .texto-2.white-color Por medio de una constante regulación en la temperatura, se adapta al medio ambiente de tu establecimiento.              
              #tres
                .subtitulo-2
                  span.secondary-color ALTA EFICIENCIA
                  br
                  span.white-color EN PRODUCCIÓN
                .texto-2.white-color Su infalible proceso asegura tener bebidas refrescantes en cualquier momento.

            section.panel.col-md-6.image.d-md-flex.align-items-center.justify-content-center.panel.dos.vertical
              img(src="assets/images/catalogo/intermedio/Sanitizado_INT.svg")#uno
              img(src="assets/images/catalogo/basico/Evaporador_B.svg")#dos
              img(src="assets/images/catalogo/premium/produccion.svg")#tres

    section.scroll
      include templates/content/catalogo/quotes
      .container.subtitulo-2.primary-color REQUERIMIENTOS
      .grid.mt-2.premium
        include templates/content/catalogo/grid-catalogo
    
  script.
    const div = document.querySelector("#detalles")
    const test = document.querySelector("body")
    const scroll = document.querySelector("#quotes")
    let circle = document.getElementById("pathCircle")
    let body = document.getElementById("bodyCatalogo")
    const scrollDivs = document.getElementById("scroll").childNodes
    let first = false 
    let horizontal = false 
    let vertical = false 
    let scrollOver = false
    //- let slideBtns = scrollDivs[2].childNodes[1].childNodes

    // SCROLL ON BTN CLICK
    document.getElementById("abajo").addEventListener("click", () => {
      scrollDivs[1].scrollIntoView()
    }, false)

    // CHECK FIRST DIV
    const observerFirst = new IntersectionObserver((entries) => {
       entries.forEach(entry => {
        if (entry.isIntersecting) {
          first = true
          //- document.body.classList.add("active")
        } else {
          first = false
        }
      });
    }, {
      root: null,
      rootMargin: '0px',
      threshold: 1,
    }).observe(scrollDivs[1]);

    function doMagic(e) {
      if(!scrolled){
        scrolled = true;
        goTo(e)
        setTimeout(function () { scrolled = false; }, 1000);
      };
    }

    document.body.addEventListener('wheel', doMagic)
    
    function goTo(e){
      if(e.deltaY < 0){
        //SCROLL UP
        if(vertical && counter === 0) {
          counter === 2
          //- window.scrollTo(0, scrollDivs[2].offsetTop)
        } else if(horizontal && counter === 0) {
          //- window.scrollTo(0, scrollDivs[1].offsetTop)
        } else if(horizontal && !vertical){
          
        } else if(vertical && counter > 0){
          
          counter--
          //- window.scrollTo(0, scrollDivs[counter + 3].offsetTop)
          scrollDivs[counter + 3].childNodes[0].classList.add("active")
          scrollDivs[counter + 3].childNodes[0].childNodes[0].classList.add("active")
        }
      } else {
        // SCROLL DOWN
        if(first){
          //- window.scrollTo(0, scrollDivs[2].offsetTop)
        }
        
        if(vertical) {
          counter++
          if(counter === 3) {
            //- window.scrollTo(0, scrollDivs[6].offsetTop)
          } else {
            //- window.scrollTo(0, scrollDivs[counter + 3].offsetTop)
            scrollDivs[counter + 3].childNodes[0].classList.add("active")
            scrollDivs[counter + 3].childNodes[0].childNodes[0].classList.add("active")
            scrollDivs[counter + 2].childNodes[0].classList.remove("active")
            scrollDivs[counter + 2].childNodes[0].childNodes[0].classList.remove("active")
          }
        }
      }
    }


    function Timer(fn, t) {
        var timerObj = setInterval(fn, t);

        this.stop = function() {
            if (timerObj) {
                clearInterval(timerObj);
                timerObj = null;
            }
            return this;
        }

        // start timer using current settings (if it's not already running)
        this.start = function() {
            if (!timerObj) {
                this.stop();
                timerObj = setInterval(fn, t);
            }
            return this;
        }

        // start with new or original interval, stop current interval
        this.reset = function(newT = t) {
            t = newT;
            return this.stop().start();
        }
      
      }

    setTimeout(()=> {
      document.getElementById("medidas").classList.add("active");
    }, 200)

    let counter = 0


    

    function callbackVertical(entries, observer) {
      entries.forEach(entry => {
        if (entry.isIntersecting) {
          counter = 4
          //- document.body.classList.add("active")
        }
      });
    }

    // QUOTES SLIDER
    let slides = document.querySelectorAll('#quotes .content')
    let btns = document.querySelectorAll('#loader.quotes li')
    let btnsH = document.querySelectorAll('#loader.no-animate li')
    let num = 0
    let start = false
    let timer

    
    function slideInterval() {
        for(let b = 0; b < btns.length; b++) {
          btns[b].classList.remove("active")
        }
        num++
        if(num === 5){
          for(let a = 0; a < slides.length; a++){
            slides[a].classList.remove("active")
            slides[a].classList.remove("remove")
          }
          slides[0].classList.add("active")
          num = 0
        }
        btns[num].classList.add("active")
        slides[num].classList.add("active")      
        slides[num].classList.remove("remove")      
        slides[num - 1].classList.remove("active")      
        slides[num - 1].classList.add("remove")      
      }
      
      let x = 0
      var scrolled = false;

      var controller = new ScrollMagic.Controller();

      new ScrollMagic.Scene({
        triggerElement: "#horizontal",
        triggerHook: "onLeave",
        duration: "200%"
      })
      .setPin("#horizontal")
      .on("start", (event)=> {
          btnsH[0].classList.add("active")
          document.getElementById("detalles").style.transform = "translateX(0%)"
      }).on("progress", (event) => {
        let once = true
          if(once && event.progress > 0.3 && event.progress < 0.7 && event.scrollDirection === "FORWARD"){
            document.getElementById("detalles").style.transform = "translateX(-100%)"
            document.getElementById("cubo").style.transform = "translateX(-100%)"
            btnsH[0].classList.remove("active")
            btnsH[1].classList.add("active")
            once = false 
            setTimeout(()=>{
              once = true
            }, 200)
          }
          if(once && event.progress > 0.7 && event.scrollDirection === "FORWARD"){
            document.getElementById("cubo").style.transform = "translateX(-200%)"
            document.getElementById("detalles").style.transform = "translateX(-200%)"
            document.getElementById("kilos").style.transform = "translateX(-200%)"
            btnsH[1].classList.remove("active")
            btnsH[0].classList.remove("active")
            btnsH[2].classList.add("active")
            once = false 
            setTimeout(()=>{
              once = true
            }, 200)
          }
          if(once && event.progress > 0.3 && event.progress < 0.5 && event.scrollDirection === "FORWARD"){
            document.getElementById("detalles").style.transform = "translateX(-100%)"
            document.getElementById("cubo").style.transform = "translateX(-100%)"
            once = false 
            setTimeout(()=>{
              once = true
            }, 200)
          }
          if(once && event.progress < 0.7 && event.progress > 0.5 && event.scrollDirection === "REVERSE"){
            document.getElementById("cubo").style.transform = "translateX(-100%)"
            document.getElementById("kilos").style.transform = "translateX(0%)"
            btnsH[1].classList.add("active")
            btnsH[2].classList.remove("active")
            btnsH[0].classList.remove("active")
            once = false 
            setTimeout(()=>{
              once = true
            }, 200)
          }
          if(once && event.progress < 0.5 && event.scrollDirection === "REVERSE"){
            document.getElementById("detalles").style.transform = "translateX(0%)"
            document.getElementById("cubo").style.transform = "translateX(0%)"
            btnsH[0].classList.add("active")
            btnsH[1].classList.remove("active")
          }
        }).setClassToggle("#pathCircle", "active")
        .addTo(controller);

        var wipeAnimation2 = new TimelineMax()
        .fromTo("#vertical-1 .panel.text #uno", 1, {y: "10%"}, {y: "-150%", ease: Linear.easeNone}, 1)
        .to("#vertical-1 .panel.text #uno", 1, {opacity: "0", ease: Linear.easeNone}, 1)
        .fromTo("#vertical-1 img#uno", 0.3, {opacity: "1"}, {opacity: "1", ease: Linear.easeNone}, 1)
        .fromTo("#vertical-1 img#uno", 0.7, {opacity: "1"}, {opacity: "0", ease: Linear.easeNone}, 1)
        .fromTo("#vertical-1 .panel.text #dos", 1, {y: "0%", opacity: 0}, {y: "-50%", opacity:1, ease: Linear.easeNone}, 1)
        .fromTo("#vertical-1 .panel.text #dos", 1, {y: "-50%"}, {y: "-170%", ease: Linear.easeNone}, 2)
        .fromTo("#vertical-1 img#dos", 0.5, {opacity: "0"}, {opacity: "1", ease: Linear.easeNone}, 2)
        .to("#vertical-1 img#dos", 0.3, {opacity: "0", ease: Linear.easeNone}, 3)
        .to("#vertical-1 .panel.text #dos", 1, {y:"-220%", ease: Linear.easeNone}, 3)
        .to("#vertical-1 .panel.text #dos", 1, {opacity:"0", ease: Linear.easeNone}, 3)
        .fromTo("#vertical-1 .panel.text #tres", 1, {y: "-150%", opacity: 0}, {y: "-200%", opacity: 1, ease: Linear.easeNone}, 3)
        .to("#vertical-1 .panel.text #dos", 1, {y:"-250%", opacity: 0, ease: Linear.easeNone}, 4)
        .to("#vertical-1 .panel.text #tres", 1,  {y: "-230%", opacity: 1, ease: Linear.easeNone}, 4)
        .fromTo("#vertical-1 img#tres", 0.7, {opacity: "0"}, {opacity: "1", ease: Linear.easeNone}, 4)
        
        new ScrollMagic.Scene({
          triggerElement: "#vertical-div-1",
          triggerHook: "onLeave",
          duration: "400%"
        })
        .setPin("#vertical-div-1", {pushFollowes: false,})
        .setTween(wipeAnimation2)
        //- .setClassToggle("#pathCircle", "active")
        //- .addIndicators() // add indicators (requires plugin)
        .addTo(controller);

        timer = new Timer(function() {
              slideInterval()
          }, 6000);

        new ScrollMagic.Scene({
          triggerElement: "#quotes",
          triggerHook: "onLeave",
        }).on("enter", function(){
          if(num === 0){
              btns[num].classList.add("active")
            }
          timer.start()
        }).on("leave", function(){
          timer.stop()
        })
        //- .addIndicators() // add indicators (requires plugin)
        .addTo(controller);

        function changeSlides(idx, event) {
          for(let b = 0; b < btns.length; b++) {
            btns[b].classList.remove("active")
            slides[b].classList.remove("active")
            slides[b].classList.remove("remove")
          }
          i = idx
          if(i === 0 && slides[i].classList.contains("remove")) {
            slides[idx].classList.remove("remove")
          }
          slides[idx].classList.add("active")
          btns[idx].classList.add("active")
          num = idx
          timer.reset(6000)
        }

